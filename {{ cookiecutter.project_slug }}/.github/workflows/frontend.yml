name: Frontend CI

on:
  push:
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"
  workflow_dispatch:

env:
  IMAGE_NAME_PREFIX: {{ cookiecutter.__container_image_prefix }}
  IMAGE_NAME_SUFFIX: frontend
  NODE_VERSION: {{ cookiecutter.__node_version }}.x

defaults:
  run:
    working-directory: ./frontend

jobs:

  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Update Global Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      - name: Use Node.js {{ "${{ env.node-version }}" }}
        uses: actions/setup-node@v3
        with:
          node-version: {{ "${{ env.NODE_VERSION }}" }}
          cache: 'yarn'
          cache-dependency-path: 'frontend/yarn.lock'

      - name: Prettier
        id: prettier
        run: npx prettier@3.0.3 --single-quote --check 'src/**/*.{js,jsx,ts,tsx,css,scss}' --config=package.json

      - name: Install packages
        run: make install

      - name: ESLint
        id: eslint
        if: {{ "${{ success() || failure() }}" }}
        run: yarn run lint:ci

      - name: i18n sync
        id: i18n
        if: {{ "${{ success() || failure() }}" }}
        run: make i18n-ci

      - name: Unit Tests
        id: unit
        if: {{ "${{ success() || failure() }}" }}
        run: make test

      - name: Report
        if: {{ "${{ success() || failure() }}" }}
        run: |
          echo '# Code Analysis' >> $GITHUB_STEP_SUMMARY
          echo '| Test | Status |' >> $GITHUB_STEP_SUMMARY
          echo '| --- | --- |' >> $GITHUB_STEP_SUMMARY
          {{ "echo '| Prettier | ${{ steps.prettier.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY" }}
          {{ "echo '| ESLint | ${{ steps.eslint.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY" }}
          {{ "echo '| i18n | ${{ steps.i18n.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY" }}
          {{ "echo '| Unit Tests | ${{ steps.unit.conclusion == 'failure' && '❌' || ' ✅' }} |' >> $GITHUB_STEP_SUMMARY " }}


  release:
    runs-on: ubuntu-latest
    needs:
      - code-analysis
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout
        uses: actions/checkout@{{ cookiecutter.__gha_checkout_version }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@{{ cookiecutter.__gha_docker_docker_metadata_version }}
        with:
          images: |
            {{ "${{ env.IMAGE_NAME_PREFIX }}-${{ env.IMAGE_NAME_SUFFIX }}" }}
          labels: |
            org.label-schema.docker.cmd=docker run -d -p 3000:3000 {{ "${{ env.IMAGE_NAME_PREFIX }}-${{ env.IMAGE_NAME_SUFFIX }}" }}:latest
          flavor:
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{ "{{is_default_branch}}" }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@{{ cookiecutter.__gha_docker_docker_qemu_version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@{{ cookiecutter.__gha_docker_docker_buildx_version }}

      - name: Login to Container Registry
        uses: docker/login-action@{{ cookiecutter.__gha_docker_docker_login_version }}
        with:
          {%- if cookiecutter.container_registry == 'Docker Hub' %}
          username: {{"${{ secrets.DOCKERHUB_USERNAME }}"}}
          password: {{"${{ secrets.DOCKERHUB_TOKEN }}"}}
          {%- endif %}
          {%- if cookiecutter.container_registry == 'GitHub' %}
          registry: ghcr.io
          username: {{"${{ github.actor }}"}}
          password: {{"${{ secrets.GITHUB_TOKEN }}"}}
          {%- endif %}

      - name: Build and push
        uses: docker/build-push-action@{{ cookiecutter.__gha_docker_docker_build_push_version }}
        with:
          platforms: linux/amd64
          context: frontend/
          file: frontend/Dockerfile
          push: {{"${{ github.event_name != 'pull_request' }}"}}
          tags: {{"${{ steps.meta.outputs.tags }}"}}
          labels: ${{"${{ steps.meta.outputs.labels }}"}}
